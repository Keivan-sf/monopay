"use strict";(self.webpackChunkpolypay_docs=self.webpackChunkpolypay_docs||[]).push([[976],{8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},5064:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7294),r=n(9443);var o=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(6010),l="tabItem_1uMI",s="tabItemActive_2DSg";var c=function(e){var t,n=e.lazy,r=e.block,c=e.defaultValue,u=e.values,p=e.groupId,d=e.className,m=a.Children.toArray(e.children),f=null!=u?u:m.map((function(e){return{value:e.props.value,label:e.props.label}})),b=null!=c?c:null==(t=m.find((function(e){return e.props.default})))?void 0:t.props.value,y=o(),v=y.tabGroupChoices,g=y.setTabGroupChoices,h=(0,a.useState)(b),k=h[0],x=h[1],C=[];if(null!=p){var w=v[p];null!=w&&w!==k&&f.some((function(e){return e.value===w}))&&x(w)}var I=function(e){var t=e.currentTarget,n=C.indexOf(t),a=f[n].value;x(a),null!=p&&(g(p,a),setTimeout((function(){var e,n,a,r,o,i,l,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,o=e.right,i=window,l=i.innerHeight,c=i.innerWidth,n>=0&&o<=c&&r<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},T=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=C.indexOf(e.target)+1;n=C[a]||C[0];break;case"ArrowLeft":var r=C.indexOf(e.target)-1;n=C[r]||C[C.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},d)},f.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,i.Z)("tabs__item",l,{"tabs__item--active":k===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:T,onFocus:I,onClick:I},null!=n?n:t)}))),n?(0,a.cloneElement)(m.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},m.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}},220:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=n(5064),l=n(8215),s=n(6213),c=["components"],u={sidebar_position:2,title:"Configuration"},p=void 0,d={unversionedId:"best-practices/configuration",id:"best-practices/configuration",isDocsHomePage:!1,title:"Configuration",description:"If you use multiple drivers, you might want to keep your all of your configurations in a separate file.",source:"@site/docs/best-practices/configuration.mdx",sourceDirName:"best-practices",slug:"/best-practices/configuration",permalink:"/polypay.js/docs/best-practices/configuration",editUrl:"https://github.com/alitnk/polypay.js/edit/main/documentation/docs/best-practices/configuration.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Configuration"},sidebar:"tutorialSidebar",previous:{title:"Catching Exceptions",permalink:"/polypay.js/docs/best-practices/catching-exceptions"},next:{title:"Examples",permalink:"/polypay.js/docs/examples"}},m=[],f={toc:m};function b(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you use multiple drivers, you might want to keep your all of your configurations in a separate file."),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"typescript",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,o.kt)(s.Z,{className:"language-ts",title:"polypay-config.ts",mdxType:"CodeBlock"},'import { ConfigObject } from "polypay";\n\nexport const polypayConfig: ConfigObject = {\n  zarinpal: {\n    merchantId: "zarinpal-merchant",\n    sandbox: true,\n  },\n  zibal: {\n    merchantId: "zibal-merchant",\n    sandbox: true,\n  },\n};\n')),(0,o.kt)(l.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,o.kt)(s.Z,{className:"language-js",title:"polypay-config.js",mdxType:"CodeBlock"},'/** @type {import("polypay.js").ConfigObject} */\nexport const polypayConfig = {\n    zarinpal: {\n        merchantId: "zarinpal-merchant",\n        sandbox: true,\n    },\n    zibal: {\n        merchantId: "zibal-merchant",\n        sandbox: true,\n    }\n}\n'))),(0,o.kt)("p",null,"And then import the configuration when creating the driver instance."))}b.isMDXComponent=!0}}]);